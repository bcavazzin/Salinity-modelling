model {

  for (i in 1:n_dat) {
    intensity[i] ~ dnorm(mu[i], tau)
    mu[i] = alpha[bac_id[i]] + beta[bac_id[i]]*log_salinity[lake[i]] + gamma[lake[i]]
  }

  # missingness model
  for (j in 1:(n_lake_obs+n_lake_miss)) {
    log_salinity[j] ~ dnorm(mu.x, p.x)
    gamma[j] ~ dnorm(mu.g, p.g)
  }
  
  ## priors
  
  tau = 1/pow(sd.tau, 2)
  sd.tau ~ dunif(0, 0.5)
 
  for (i in 1:n_bac) {
    alpha[i] ~ dnorm(mu_alpha, tau_alpha)
    beta[i] ~ dnorm(mu_beta, tau_beta)
  }

  # random effects
  mu_alpha ~ dunif(-10, 10)
  mu_beta ~ dunif(-10, 10)
  
  tau_alpha = 1/pow(sd_alpha, 2)
  sd_alpha ~ dunif(0, 10)
  tau_beta = 1/pow(sd_beta, 2)
  sd_beta ~ dunif(0, 10)

  mu.x ~ dunif(-2, 5)
  p.x = 1/pow(sd.x, 2)
  sd.x ~ dunif(0, 0.1)

  mu.g ~ dunif(-2, 5)
  p.g = 1/pow(sd.g, 2)
  sd.g ~ dunif(0, 0.1)
  
  for (j in 1:n_lake_miss) {
    log_missing[j] = log_salinity[n_lake_obs + j]
    missing[j] = exp(log_missing)
  }
  
  # posterior_prediction
  #pred_mean_lsalinity[] = (mu[] - mu_alpha)/mu_beta
  for (i in 1:n_dat) {
    #pred_mean_lsalinity[i] = (mu[i] - mu_alpha)/mu_beta
    #pred_lsalinity[i] = (mu[i] - alpha[bac_id[i]])/beta[bac_id[i]]
  
   intens_pred[i] ~ dnorm(mu[i], tau)
   ## mu[i] = alpha[bac_id[i]] + beta[bac_id[i]]*log_salinity[lake[i]]
  }
}
