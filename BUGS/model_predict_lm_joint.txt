# joint distrubition on the intercept and slope + missing model 
# missing model with truncation: T(-2.5,7)
# predict model from line 59

model {

  for (i in 1:n_dat) {
    intensity[lake_id[i], bac_id[i]] ~ dnorm(mu[i], tau)
    mu[i] = alpha[bac_id[i]] - beta[bac_id[i]]*log_salinity[lake_id[i]] 
  }
  
   # missingness model
  for (j in 1:n_lake) { 
    log_salinity[j] ~ dnorm(mu.x, p.x)T(-2.5,7) # Without MAT
    #log_salinity[j] ~ dnorm(mu_s[j], p.x)T(-2.5,7) #With MAT (T valuesin the log scale)
    #mu_s[j] = beta_s*MAT[j] #+ beta_p*Summerp[j]
  
  }
  
  ## priors
  
  mu.x ~ dunif(-2, 5)
  p.x = 1/pow(sd.x, 2)
  sd.x ~ dunif(0, 0.1)
  #beta_s ~ dnorm(0,0.001)
   
  tau = 1/pow(sd.tau, 2)
  sd.tau ~ dunif(0, 2)
 
  for (i in 1:n_bac) {  
    lbeta[i, 1:2] ~ dmnorm(mu_z[1:2], inv.bOmega[1:2,1:2])
    
    alpha[i] <- exp(lbeta[i, 1])
    beta[i] <- exp(lbeta[i, 2])
  }

  bR[1,1] <- 1 #precision inter (orig value 20)
  bR[2,2] <- 1  #precision slope (orig value 2)
  bR[1,2] <- 0.1 #1/covariance 
  bR[2,1] <- 0.1 #1/covariance 
  
  inv.bOmega[1:2,1:2] ~ dwish(bR[1:2,1:2], 2)
     
  mu_z[1] ~ dunif(1, 14) #dunif(8, 14)  
  mu_z[2] ~ dunif(0.01, 1) 
  
  # from: https://costa.eeb.ucsc.edu/wp-content/uploads/2015/10/hierarchical-slides.pdf
  # covariance matrix
  #Sigma[1:2,1:2] <- inverse(inv.Omega[1:2,1:2])3eryhj
   
  
  # variances of the random effects
  #sigma2.alpha <- Sigma[1,1]
  #sigma2.beta <- Sigma[2,2]

  # correlation between the intercepts and slopes
  #cor.alpha.beta <- Sigma[1,2]/(pow(sigma2.alpha,0.5)*pow(sigma2.beta,0.5))

  # posterior_prediction
  for (i in 1:n_dat) {
    #pred_mean_lsalinity[i] = (mu[i] - mu_alpha)/mu_beta
    #pred_lsalinity[i] = (mu[i] - mu_alpha)/mu_beta
    #pred_lsalinity[i] = (intensity[lake_id[i], bac_id[i]] - alpha[bac_id[i]])/mu_beta
    #pred_lsalinity[i] = (intensity[lake_id[i], bac_id[i]] - alpha[bac_id[i]])/beta[bac_id[i]]
  
   #intens_pred[i] ~ dnorm(mu[i], tau)
   mu.p[i] = alpha[bac_id[i]] + beta[bac_id[i]]*log_salinity[lake_id[i]]
  }
}
